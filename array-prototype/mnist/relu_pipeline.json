{
  "weightBuffersAssignment": {
    "buffers": [],
    "totalSize": 0
  },
  "dataBuffersAssignment": {
    "buffers": [
      {
        "shape": [
          4
        ],
        "offset": 0,
        "size": 4
      },
      {
        "shape": [
          4
        ],
        "offset": 4,
        "size": 4
      }
    ],
    "totalSize": 8
  },
  "kernels": [
    {
      "kernelString": "\n#include <metal_stdlib>\nusing namespace metal;\n\n#define INPUT_OFFSET 0\n#define OUTPUT_OFFSET 4\n#define N 4\n\nkernel void relu(const device float *weight_buffer[[buffer(0)]],\n                 device float *data_buffer[[buffer(1)]],\n                  uint index[[thread_position_in_grid]])\n{\n  device float *input_data = data_buffer + INPUT_OFFSET;\n  device float *output_data = data_buffer + OUTPUT_OFFSET;\n    for (int gid = index; gid < N; gid += 4096) {\n      float val = input_data[gid];\n      if (val < 0.0) {\n        val = 0.0;\n      }\n      output_data[gid] = val;\n    }\n}\n      ",
      "kernelFunctionName": "relu",
      "threadgroupsPerGrid": {
        "width": 8,
        "height": 1,
        "depth": 1
      },
      "threadsPerThreadgroup": {
        "width": 512,
        "height": 1,
        "depth": 1
      }
    }
  ],
  "inputs": [
    0
  ],
  "outputs": [
    1
  ]
}